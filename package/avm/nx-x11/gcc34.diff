# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/avm/nx-X11/gcc34.diff
# ROCK Linux is Copyright (C) 1998 - 2006 Clifford Wolf
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

--- nxcomp/Types.h.orig	2004-08-10 10:47:11.000000000 +0200
+++ nxcomp/Types.h	2004-09-16 02:19:01.364333008 +0200
@@ -74,22 +74,26 @@
 
   void clear()
   {
-    #if defined(__STL_USE_STD_ALLOCATORS) || defined(__GLIBCPP_INTERNAL_VECTOR_H)
+    #if defined(_VECTOR_H) || defined(__GLIBCPP_INTERNAL_VECTOR_H)
 
-    #if defined(__GLIBCPP_INTERNAL_VECTOR_H)
+    #if defined(_VECTOR_H)
 
-    _Destroy(_M_start, _M_finish);
+    _Destroy(_M_impl._M_start, _M_impl._M_finish);
 
-    #else
+    _M_deallocate(_M_impl._M_start, _M_impl._M_end_of_storage - _M_impl._M_start);
 
-    destroy(_M_start, _M_finish);
+    _M_impl._M_start = _M_impl._M_finish = _M_impl._M_end_of_storage = 0;
 
-    #endif
+    #else
 
     _M_deallocate(_M_start, _M_end_of_storage - _M_start);
 
     _M_start = _M_finish = _M_end_of_storage = 0;
 
+    _Destroy(_M_start, _M_finish);
+
+    #endif
+
     #else
 
     destroy(start, finish);
@@ -108,22 +112,28 @@
 
   void clear()
   {
-    #if defined(__STL_USE_STD_ALLOCATORS) || defined(__GLIBCPP_INTERNAL_VECTOR_H)
+    #if defined(_VECTOR_H) || defined(__GLIBCPP_INTERNAL_VECTOR_H)
 
-    #if defined(__GLIBCPP_INTERNAL_VECTOR_H)
+    #if defined(_VECTOR_H)
 
-    _Destroy(_M_start, _M_finish);
+    _Destroy(_M_impl._M_start, _M_impl._M_finish);
 
-    #else
+    _M_deallocate(_M_impl._M_start, _M_impl._M_end_of_storage - _M_impl._M_start);
 
-    destroy(_M_start, _M_finish);
+    _M_impl._M_start = _M_impl._M_finish = _M_impl._M_end_of_storage = 0;
 
-    #endif
+    #else
 
     _M_deallocate(_M_start, _M_end_of_storage - _M_start);
 
     _M_start = _M_finish = _M_end_of_storage = 0;
 
+    _Destroy(_M_start, _M_finish);
+
+    #endif
+
+
+
     #else
 
     destroy(start, finish);
--- nxcomp/Jpeg.cpp.orig	2004-09-13 03:41:49.905274168 +0200
+++ nxcomp/Jpeg.cpp	2004-09-13 03:43:06.886571232 +0200
@@ -452,7 +452,7 @@
     // next line.
     //
 
-    (char *) pixelPtr += RoundUp4(w * 2) - w * 2;
+    pixelPtr += RoundUp4(w * 2) - w * 2;
 
     dy++;
   }
@@ -562,7 +562,7 @@
       pixelPtr += 3;
     }
 
-    (char *) pixelPtr += RoundUp4(w * 3) - w * 3;
+    pixelPtr += RoundUp4(w * 3) - w * 3;
 
     dy++;
   }
--- nxcomp/Png.cpp.orig	2004-09-13 03:43:18.138860624 +0200
+++ nxcomp/Png.cpp	2004-09-13 03:43:41.532304280 +0200
@@ -452,7 +452,7 @@
     // next line
     //
 
-    (char *) pixelPtr += RoundUp4(w * 2) - w * 2;
+    pixelPtr += RoundUp4(w * 2) - w * 2;
   }
 
   png_destroy_read_struct(&png_ptr, &info_ptr,NULL);
@@ -578,7 +578,7 @@
       pixelPtr += 3;
     }
 
-    (char *) pixelPtr += RoundUp4(w * 3) - w * 3;
+    pixelPtr += RoundUp4(w * 3) - w * 3;
   }
 
   png_destroy_read_struct(&png_ptr, &info_ptr,NULL);
