# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/gcc/config-300.hlp
# ROCK Linux is Copyright (C) 1998 - 2006 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

MENU_COMPILER
  Here you can choose which compiler to use for various tasks.

ROCKCFG_DEFAULT_CC
  The options controls the default compiler for C programs.

ROCKCFG_DEFAULT_KCC
  The options controls the default compiler for the kernel.

ROCKCFG_DEFAULT_CXX
  The options controls the default compiler for C++ programs.

ROCKCFG_DEFAULT_F77
  The optiosn controls the default compiler Fortran-77 programs.

ROCKCFG_PKG_GCC_STACKPRO
  Please check here to use the GCC Stack Smashing Protector in all
  gcc versions for which it is available.
  This will help to prevent buffer overflows.

ROCKCFG_PKG_GCC_GCC2
  Build the GNU Compiler Collection, version 2.x.

ROCKCFG_PKG_GCC_GCC32
  Build the GNU Compiler Collection, version 3.2.x.

ROCKCFG_PKG_GCC_GCC33
  Build the GNU Compiler Collection, version 3.3.x.

ROCKCFG_PKG_GCC_GCC34
  Build the GNU Compiler Collection, version 3.4.x.

ROCKCFG_PKG_GCC_GCC40
  Build the GNU Compiler Collection, version 4.0.x.

ROCKCFG_PKG_GCC_GCC41
  Build the GNU Compiler Collection, version 4.1.x.

ROCKCFG_PKG_GCC2_NO_CHILL
  Please check here if you don't want to build the gcc2 CHILL compiler.

ROCKCFG_PKG_GCC32_NO_JAVA
  Please check here if you don't want to build the gcc32 JAVA compiler.

ROCKCFG_PKG_GCC33_NO_JAVA
  Please check here if you don't want to build the gcc33 JAVA compiler.

ROCKCFG_PKG_GCC34_NO_JAVA
  Please check here if you don't want to build the gcc34 JAVA compiler.

ROCKCFG_PKG_GCC34_PROFILED
  Enables profiling during GCC bootstrap and so yields an optimised
  compiler. Build speedup might be 5-10%.

ROCKCFG_PKG_GCC40_NO_JAVA
  Please check here if you don't want to build the gcc40 JAVA compiler.

ROCKCFG_PKG_GCC40_PROFILED
  Enables profiling during GCC bootstrap and so yields an optimised
  compiler. Build speedup might be 5-10%.

ROCKCFG_PKG_GCC41_NO_JAVA
  Please check here if you don't want to build the gcc41 JAVA compiler.

ROCKCFG_PKG_GCC41_PROFILED
  Enables profiling during GCC bootstrap and so yields an optimised
  compiler. Build speedup might be 5-10%.

ROCKCFG_PKG_GCC40_BOOTSTRAP
  Enables bootstrapping the GCC compiler in native builds. GCC builds itself 3
  times, using the previously built compiler for the 2nd and 3rd build. This
  is a good way to check if the GCC you build actually works, at the cost of
  increased build time.

ROCKCFG_PKG_GCC41_BOOTSTRAP
  Enables bootstrapping the GCC compiler in native builds. GCC builds itself 3
  times, using the previously built compiler for the 2nd and 3rd build. This
  is a good way to check if the GCC you build actually works, at the cost of
  increased build time.

ROCKCFG_PKG_GCC42_BOOTSTRAP
  Enables bootstrapping the GCC compiler in native builds. GCC builds itself 3
  times, using the previously built compiler for the 2nd and 3rd build. This
  is a good way to check if the GCC you build actually works, at the cost of
  increased build time.

ROCKCFG_PKG_GCC43_BOOTSTRAP
  Enables bootstrapping the GCC compiler in native builds. GCC builds itself 3
  times, using the previously built compiler for the 2nd and 3rd build. This
  is a good way to check if the GCC you build actually works, at the cost of
  increased build time.
