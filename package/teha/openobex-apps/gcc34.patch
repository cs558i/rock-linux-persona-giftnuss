# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/teha/openobex-apps/gcc34.patch
# ROCK Linux is Copyright (C) 1998 - 2006 Clifford Wolf
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

diff -ruN openobex-apps-1.0.0/src/obex_put_common.c openobex-apps-1.0.0-new/src/obex_put_common.c
--- openobex-apps-1.0.0/src/obex_put_common.c	2002-12-01 18:34:41.000000000 +0100
+++ openobex-apps-1.0.0-new/src/obex_put_common.c	2004-09-12 00:57:04.000000000 +0200
@@ -82,7 +82,7 @@
 			break;
 		
 		default:
-			printf(__FUNCTION__ "() Skipped header %02x\n", hi);
+			printf("%s() Skipped header %02x\n", __FUNCTION__, hi);
 		}
 	}
 	if(!body)	{
@@ -123,7 +123,7 @@
 		OBEX_ObjectSetRsp(object, OBEX_RSP_SUCCESS, OBEX_RSP_SUCCESS);
 		break;
 	default:
-		printf(__FUNCTION__ "() Denied %02x request\n", cmd);
+		printf("%s() Denied %02x request\n",__FUNCTION__,  cmd);
 		OBEX_ObjectSetRsp(object, OBEX_RSP_NOT_IMPLEMENTED, OBEX_RSP_NOT_IMPLEMENTED);
 		break;
 	}
diff -ruN openobex-apps-1.0.0/src/obex_test_cable.h openobex-apps-1.0.0-new/src/obex_test_cable.h
--- openobex-apps-1.0.0/src/obex_test_cable.h	2002-12-01 18:34:41.000000000 +0100
+++ openobex-apps-1.0.0-new/src/obex_test_cable.h	2004-09-12 01:05:31.000000000 +0200
@@ -38,7 +38,7 @@
 #include <openobex/obex.h>
 
 #ifdef CABLE_DEBUG
-#define CDEBUG(args...) printf(__FUNCTION__ "() " args)
+#define CDEBUG(args...) printf("%s() ",__FUNCTION__, args)
 #else
 #define CDEBUG(args...)
 #endif
diff -ruN openobex-apps-1.0.0/src/obex_test_client.c openobex-apps-1.0.0-new/src/obex_test_client.c
--- openobex-apps-1.0.0/src/obex_test_client.c	2002-12-01 18:34:41.000000000 +0100
+++ openobex-apps-1.0.0-new/src/obex_test_client.c	2004-09-12 00:58:31.000000000 +0200
@@ -370,13 +370,13 @@
 
 	while(OBEX_ObjectGetNextHeader(handle, object, &hi, &hv, &hlen))	{
 		if(hi == OBEX_HDR_BODY)	{
-		printf(__FUNCTION__ "() Found body\n");
+		printf("%s() Found body\n",__FUNCTION__ );
 			body = hv.bs;
 			body_len = hlen;
 			break;
 		}
 		else	{
-			printf(__FUNCTION__ "() Skipped header %02x\n", hi);
+			printf("%s() Skipped header %02x\n",__FUNCTION__,  hi);
 		}
 	}
 
diff -ruN openobex-apps-1.0.0/src/obex_test_server.c openobex-apps-1.0.0-new/src/obex_test_server.c
--- openobex-apps-1.0.0/src/obex_test_server.c	2002-12-01 18:34:41.000000000 +0100
+++ openobex-apps-1.0.0-new/src/obex_test_server.c	2004-09-12 01:02:48.000000000 +0200
@@ -54,17 +54,17 @@
 	char *name = NULL;
 	char *namebuf = NULL;
 
-	printf(__FUNCTION__ "()\n");
+	printf("%s()\n", __FUNCTION__);
 
 	while(OBEX_ObjectGetNextHeader(handle, object, &hi, &hv, &hlen))	{
 		switch(hi)	{
 		case OBEX_HDR_BODY:
-			printf(__FUNCTION__ "() Found body\n");
+			printf("%s() Found body\n", __FUNCTION__ );
 			body = hv.bs;
 			body_len = hlen;
 			break;
 		case OBEX_HDR_NAME:
-			printf(__FUNCTION__ "() Found name\n");
+			printf("%s() Found name\n",__FUNCTION__);
 			if( (namebuf = malloc(hlen / 2)))	{
 				OBEX_UnicodeToChar(namebuf, hv.bs, hlen);
 				name = namebuf;
@@ -72,7 +72,7 @@
 			break;
 		
 		default:
-			printf(__FUNCTION__ "() Skipped header %02x\n", hi);
+			printf("%s() Skipped header %02x\n", __FUNCTION__, hi);
 		}
 	}
 	if(!body)	{
@@ -103,12 +103,12 @@
 	char *name = NULL;
 	char *namebuf = NULL;
 
-	printf(__FUNCTION__ "()\n");
+	printf("%s()\n", __FUNCTION__);
 
 	while(OBEX_ObjectGetNextHeader(handle, object, &hi, &hv, &hlen))	{
 		switch(hi)	{
 		case OBEX_HDR_NAME:
-			printf(__FUNCTION__ "() Found name\n");
+			printf("%s() Found name\n", __FUNCTION__);
 			if( (namebuf = malloc(hlen / 2)))	{
 				OBEX_UnicodeToChar(namebuf, hv.bs, hlen);
 				name = namebuf;
@@ -116,16 +116,16 @@
 			break;
 		
 		default:
-			printf(__FUNCTION__ "() Skipped header %02x\n", hi);
+			printf("%s() Skipped header %02x\n", __FUNCTION__, hi);
 		}
 	}
 
 	if(!name)	{
-		printf(__FUNCTION__ "() Got a GET without a name-header!\n");
+		printf("%s() Got a GET without a name-header!\n", __FUNCTION__);
 		OBEX_ObjectSetRsp(object, OBEX_RSP_NOT_FOUND, OBEX_RSP_NOT_FOUND);
 		return;
 	}
-	printf(__FUNCTION__ "() Got a request for %s\n", name);
+	printf("%s() Got a request for %s\n", __FUNCTION__, name);
 
 	buf = easy_readfile(name, &file_size);
 	if(buf == NULL) {
@@ -154,7 +154,7 @@
 
 	const uint8_t *who = NULL;
 	int who_len = 0;
-	printf(__FUNCTION__ "()\n");
+	printf("%s()\n", __FUNCTION__);
 
 	while(OBEX_ObjectGetNextHeader(handle, object, &hi, &hv, &hlen))	{
 		if(hi == OBEX_HDR_WHO)	{
@@ -162,7 +162,7 @@
 			who_len = hlen;
 		}
 		else	{
-			printf(__FUNCTION__ "() Skipped header %02x\n", hi);
+			printf("%s() Skipped header %02x\n", __FUNCTION__, hi);
 		}
 	}
 	if (who_len == 6)	{
@@ -199,7 +199,7 @@
 		OBEX_ObjectSetRsp(object, OBEX_RSP_CONTINUE, OBEX_RSP_SUCCESS);
 		break;
 	default:
-		printf(__FUNCTION__ "() Denied %02x request\n", cmd);
+		printf("%s() Denied %02x request\n", __FUNCTION__, cmd);
 		OBEX_ObjectSetRsp(object, OBEX_RSP_NOT_IMPLEMENTED, OBEX_RSP_NOT_IMPLEMENTED);
 		break;
 	}
@@ -224,7 +224,7 @@
 		break;
 
 	default:
-		printf(__FUNCTION__ "() Command (%02x) has now finished\n", obex_cmd);
+		printf("%s() Command (%02x) has now finished\n", __FUNCTION__, obex_cmd);
 		break;
 	}
 }
